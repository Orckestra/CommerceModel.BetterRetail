# The Azure Pipeline will be triggered for the branches below
trigger:
  branches:
    include:
    - master
    - develop
    - feature*
    - hotfix*
    - bug*
    - release*

pool:
  vmImage: 'windows-2019'

# You can change the build verbosity by changing this build parameter
parameters:
- name: BuildVerbosity
  displayName: Build verbosity
  type: boolean
  default: false

variables:
- group: CMP - Connection API V2
- group: Nuget - AA Feeds
- group: BetterRetail Sensitive Data
- name: Build.Verbose
  value: $${{ parameters.BuildVerbosity }}

env:
  AZURE_DEVOPS_BUILD_REASON: $(Build.Reason)

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    steps:
    - task: PowerShell@1
      displayName: 'Build BetterRetail'
      inputs:
        scriptName: build/Build.ps1
        arguments: '-TaskList All -IsRunningOnBuildMachine -ExtraProperties @{ NugetFeeds=$(NugetFeeds); SensitiveData = $(SensitiveData) } -Verbose:$(Build.Verbose)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Troubleshooting'
      inputs:
        PathToPublish: 'artifacts\Troubleshooting'
        ArtifactName: Troubleshooting
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Nuget'
      inputs:
        PathToPublish: 'artifacts\Nuget'
        ArtifactName: Nuget
      condition: succeededOrFailed()

    # this task exports a variable from the Build stage to make it available to the Publish stage
    - task: PowerShell@1
      displayName: Set CmpStability output variable
      name: SaveCmpStability
      inputs:
        scriptType: inlineScript
        inlineScript: > 
          Write-Host "##vso[task.setvariable variable=CmpStability;isOutput=true]$($env:CmpStability)";
    
- stage: Publish
  displayName: Publish Artifacts
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment: DepJob
    environment:
      name: WorkaroundEnvironment
    displayName: Publish To CMP
    variables:
        CmpStability: $[stageDependencies.Build.Build.outputs['SaveCmpStability.CmpStability']]
    strategy:
      runOnce:
        deploy:
          steps:
          - task: PublishToCMP@1
            name: PublishOCC
            displayName: Publish package for OCC
            inputs:
              cmpUrl: '$(CMP.Url)'
              cmpUsername: '$(CMP.UserName)'
              cmpPassword: '$(CMP.Password)'
              cmpClientCode: 'occ'
              cmpPackageFolder: '$(Pipeline.Workspace)/Nuget'
              cmpStability: '$(CmpStability)'
              cmpPackagesList: 'CommerceModel*.nupkg'
              cmpPackagesListFilterType: 'FilePattern'
              currentBuildNumber: '$(Build.BuildNumber)'

          - task: PublishToCMP@1
            name: PublishSales
            displayName: Publish package for Sales
            inputs:
              cmpUrl: '$(CMP.Url)'
              cmpUsername: '$(CMP.UserName)'
              cmpPassword: '$(CMP.Password)'
              cmpClientCode: 'sales'
              cmpPackageFolder: '$(Pipeline.Workspace)/Nuget'
              cmpStability: '$(CmpStability)'
              cmpPackagesList: 'CommerceModel*.nupkg'
              cmpPackagesListFilterType: 'FilePattern'
              currentBuildNumber: '$(Build.BuildNumber)'

          - task: PublishToCMP@1
            name: PublishSLS
            displayName: Publish package for SLS
            inputs:
              cmpUrl: '$(CMP.Url)'
              cmpUsername: '$(CMP.UserName)'
              cmpPassword: '$(CMP.Password)'
              cmpClientCode: 'sls'
              cmpPackageFolder: '$(Pipeline.Workspace)/Nuget'
              cmpStability: '$(CmpStability)'
              cmpPackagesList: 'CommerceModel*.nupkg'
              cmpPackagesListFilterType: 'FilePattern'
              currentBuildNumber: '$(Build.BuildNumber)'